@import url('https://fonts.googleapis.com/css2?family=Recursive:CASL,CRSV,MONO,slnt,wght@0,0,0,-15..0,300..1000&display=swap');

.container {
  min-height: 100vh;
  background: #000;
  color: #fff;
  display: flex;
  flex-direction: column;
  position: relative;
}

.backLink {
  color: #fff;
  text-decoration: none;
  font-family: 'Recursive', sans-serif;
  opacity: 0.7;
  transition: opacity 0.3s;
  padding: 2rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
}

.backLink:hover {
  opacity: 1;
}

.main {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  padding-bottom: 120px; /* Space for the controls */
}

.controls {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.textInput {
  width: 100%;
  max-width: 600px;
  padding: 1rem;
  font-size: 1.2rem;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: #fff;
  border-radius: 8px;
  font-family: 'Recursive', sans-serif;
  text-align: center;
}

.textInput:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.5);
}

.effectControls {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: center;
}

.effectButton {
  padding: 0.5rem 1rem;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.7);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s;
  text-transform: capitalize;
  font-family: 'Recursive', sans-serif;
}

.effectButton:hover {
  border-color: rgba(255, 255, 255, 0.5);
  color: #fff;
}

.effectButton.active {
  background: #fff;
  color: #000;
  border-color: #fff;
}

.displayText {
  font-family: 'Recursive', sans-serif;
  font-size: clamp(1.5rem, 6vw, 4rem);
  text-align: center;
  padding: 2rem;
  transition: all 0.3s;
  font-weight: 400;
}

/* Circular Effect */
.effectCircular {
  position: relative;
  height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.circularContainer {
  position: relative;
  width: calc(var(--radius) * 2);
  height: calc(var(--radius) * 2);
}

.circularChar {
  position: absolute;
  left: 50%;
  top: 50%;
  transform-origin: 0 calc(var(--radius) * -1);
  transform: rotate(var(--char-angle)) translateX(-50%) translateY(-50%);
  font-weight: 400;
}

/* Wavy Effect */
.effectWavy {
  position: relative;
}

.wavyContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.1em;
}

.wavyChar {
  display: inline-block;
  position: relative;
  animation: waveFloat 2s ease-in-out infinite;
  animation-delay: calc(var(--char-index) * 100ms);
  background: linear-gradient(
    45deg,
    #00ffaa,
    #00ff88,
    #00ddff
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  filter: brightness(1.2);
  text-shadow: 0 0 20px rgba(0, 255, 170, 0.3);
}

.wavyChar::after {
  content: attr(data-char);
  position: absolute;
  left: 0;
  top: 0;
  filter: blur(8px) brightness(1.5);
  opacity: 0.8;
  z-index: -1;
}

@keyframes waveFloat {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px) rotate(var(--rotate, 5deg));
  }
}

/* Update the displayText class to handle the wavy effect */
.displayText.effectWavy {
  font-size: clamp(3rem, 10vw, 8rem);
  letter-spacing: 0.05em;
}

/* Glitch Effect */
.effectGlitch {
  position: relative;
  color: #fff;
  font-weight: 300;
}

.glitchContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.02em;
}

.glitchCharWrapper {
  position: relative;
  display: inline-block;
  animation: glitchJitter 4s infinite steps(1);
  animation-delay: calc(var(--char-index) * 50ms);
}

.glitchChar {
  display: inline-block;
  position: relative;
}

.glitchCharCyan,
.glitchCharMagenta {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  mix-blend-mode: screen;
}

.glitchCharCyan {
  color: #0ff;
  transform: translateX(-2px);
  animation: glitchCyan 0.2s infinite steps(1);
}

.glitchCharMagenta {
  color: #f0f;
  transform: translateX(2px);
  animation: glitchMagenta 0.3s infinite steps(1);
}

@keyframes glitchJitter {
  0%, 80%, 100% {
    transform: none;
  }
  20%, 23% {
    transform: skew(-0.1deg, -0.1deg);
  }
  40%, 43% {
    transform: skew(0.1deg, 0.1deg);
  }
  60%, 63% {
    transform: skew(-0.1deg, 0.1deg);
  }
}

@keyframes glitchCyan {
  0%, 80%, 100% {
    opacity: 0;
  }
  20%, 23% {
    opacity: 1;
  }
  40%, 43% {
    opacity: 0.8;
  }
  60%, 63% {
    opacity: 0.4;
  }
}

@keyframes glitchMagenta {
  0%, 80%, 100% {
    opacity: 0;
  }
  10%, 13% {
    opacity: 0.6;
  }
  30%, 33% {
    opacity: 1;
  }
  50%, 53% {
    opacity: 0.8;
  }
}

/* Update the displayText class for glitch effect */
.displayText.effectGlitch {
  font-size: clamp(2rem, 8vw, 5rem);
  text-transform: lowercase;
  letter-spacing: -0.02em;
}

/* Gradient Effect */
.effectGradient {
  position: relative;
}

.gradientContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.02em;
  position: relative;
}

.gradientChar {
  display: inline-block;
  position: relative;
  color: transparent;
  background: linear-gradient(
    217deg,
    #ff0051,
    #ff4d00,
    #00ddff,
    #0099ff,
    #ff0051
  );
  background-size: 500% 500%;
  -webkit-background-clip: text;
  background-clip: text;
  animation: gradientFlow 4s ease infinite;
  animation-delay: calc(var(--char-index) * 100ms);
  filter: brightness(1.2);
}

.gradientChar::before {
  content: attr(data-char);
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    #ffffffaa,
    transparent 40%
  );
  -webkit-background-clip: text;
  background-clip: text;
  z-index: 1;
  opacity: 0;
  animation: shimmer 2s ease-in-out infinite;
  animation-delay: calc(var(--char-index) * 100ms + 1s);
}

@keyframes gradientFlow {
  0%, 100% {
    background-position: 0% 0%;
  }
  25% {
    background-position: 100% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  75% {
    background-position: 0% 100%;
  }
}

@keyframes shimmer {
  0%, 100% {
    opacity: 0;
    transform: translateY(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-2px);
  }
}

/* Update the displayText class for gradient effect */
.displayText.effectGradient {
  font-size: clamp(2rem, 8vw, 5rem);
  font-weight: 600;
  letter-spacing: -0.02em;
} 